/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ViewPlansRouteImport } from './routes/view-plans'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as AboutRouteImport } from './routes/about'
import { Route as OnboardingRouteRouteImport } from './routes/onboarding/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as OnboardingRegisterRouteImport } from './routes/onboarding/register'
import { Route as OnboardingOtpVerifyRouteImport } from './routes/onboarding/otp-verify'

const ViewPlansRoute = ViewPlansRouteImport.update({
  id: '/view-plans',
  path: '/view-plans',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingRouteRoute = OnboardingRouteRouteImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingRegisterRoute = OnboardingRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => OnboardingRouteRoute,
} as any)
const OnboardingOtpVerifyRoute = OnboardingOtpVerifyRouteImport.update({
  id: '/otp-verify',
  path: '/otp-verify',
  getParentRoute: () => OnboardingRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/onboarding': typeof OnboardingRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/view-plans': typeof ViewPlansRoute
  '/onboarding/otp-verify': typeof OnboardingOtpVerifyRoute
  '/onboarding/register': typeof OnboardingRegisterRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/onboarding': typeof OnboardingRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/view-plans': typeof ViewPlansRoute
  '/onboarding/otp-verify': typeof OnboardingOtpVerifyRoute
  '/onboarding/register': typeof OnboardingRegisterRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/onboarding': typeof OnboardingRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/view-plans': typeof ViewPlansRoute
  '/onboarding/otp-verify': typeof OnboardingOtpVerifyRoute
  '/onboarding/register': typeof OnboardingRegisterRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/onboarding'
    | '/about'
    | '/contact'
    | '/view-plans'
    | '/onboarding/otp-verify'
    | '/onboarding/register'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/onboarding'
    | '/about'
    | '/contact'
    | '/view-plans'
    | '/onboarding/otp-verify'
    | '/onboarding/register'
  id:
    | '__root__'
    | '/'
    | '/onboarding'
    | '/about'
    | '/contact'
    | '/view-plans'
    | '/onboarding/otp-verify'
    | '/onboarding/register'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  OnboardingRouteRoute: typeof OnboardingRouteRouteWithChildren
  AboutRoute: typeof AboutRoute
  ContactRoute: typeof ContactRoute
  ViewPlansRoute: typeof ViewPlansRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/view-plans': {
      id: '/view-plans'
      path: '/view-plans'
      fullPath: '/view-plans'
      preLoaderRoute: typeof ViewPlansRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding/register': {
      id: '/onboarding/register'
      path: '/register'
      fullPath: '/onboarding/register'
      preLoaderRoute: typeof OnboardingRegisterRouteImport
      parentRoute: typeof OnboardingRouteRoute
    }
    '/onboarding/otp-verify': {
      id: '/onboarding/otp-verify'
      path: '/otp-verify'
      fullPath: '/onboarding/otp-verify'
      preLoaderRoute: typeof OnboardingOtpVerifyRouteImport
      parentRoute: typeof OnboardingRouteRoute
    }
  }
}

interface OnboardingRouteRouteChildren {
  OnboardingOtpVerifyRoute: typeof OnboardingOtpVerifyRoute
  OnboardingRegisterRoute: typeof OnboardingRegisterRoute
}

const OnboardingRouteRouteChildren: OnboardingRouteRouteChildren = {
  OnboardingOtpVerifyRoute: OnboardingOtpVerifyRoute,
  OnboardingRegisterRoute: OnboardingRegisterRoute,
}

const OnboardingRouteRouteWithChildren = OnboardingRouteRoute._addFileChildren(
  OnboardingRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  OnboardingRouteRoute: OnboardingRouteRouteWithChildren,
  AboutRoute: AboutRoute,
  ContactRoute: ContactRoute,
  ViewPlansRoute: ViewPlansRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
